<UserControl x:Class="Manual.Objects.TrackV"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Editors="clr-namespace:Manual.Editors"
             xmlns:local="clr-namespace:Manual.Objects"
             
             xmlns:core="clr-namespace:Manual.Core"
             
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:themes="clr-namespace:ManualToolkit.Themes;assembly=ManualToolkit"
             
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="150" d:DesignWidth="200"  d:DataContext="{d:DesignInstance Type=local:Layer}"
             CacheMode="BitmapCache">


    <UserControl.Resources>
        <ResourceDictionary>
         
            <Editors:FrameDurationToXConverter x:Key="FrameDurationToXConverter"/>
            <Editors:TrackHeightToYConverter x:Key="TrackHeightToYConverter" />
            <Editors:TrackColorTagConverter x:Key="TrackColorTagConverter" />

            <sys:Double x:Key="borderRadius">6</sys:Double>

            <Style x:Key="dragLimitsStyle" TargetType="Rectangle">
                <Setter Property="Width" Value="30" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Opacity" Value="0"/>
                <Style.Triggers>
                    <!-- Animación para cuando el mouse está sobre el elemento -->
                    <EventTrigger RoutedEvent="MouseEnter">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation 
                        Storyboard.TargetProperty="Opacity" 
                        To="0.56" 
                        Duration="0:0:0.15">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <!-- Duración de 0.3 segundos -->
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <!-- Animación para cuando el mouse sale del elemento -->
                    <EventTrigger RoutedEvent="MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation 
                        Storyboard.TargetProperty="Opacity" 
                        To="0" 
                        Duration="0:0:0.15">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <!-- Duración de 0.3 segundos -->
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
            
        </ResourceDictionary>
    </UserControl.Resources>


    <Grid Name="bodyGrid" d:Height="50" Style="{x:Null}" MinHeight="7">
        <Grid.Width>
            <MultiBinding Converter="{StaticResource FrameDurationToXConverter}">
                <Binding Path="_Animation.FrameDuration" />
                <Binding Path="DataContext.CanvasScaleX" RelativeSource="{RelativeSource AncestorType=UserControl, AncestorLevel=2 }" />
            </MultiBinding>
        </Grid.Width>

        <Grid.Height>
            <MultiBinding Converter="{StaticResource TrackHeightToYConverter}">
                <Binding Path="_Animation.TrackIndex" />
                <Binding Path="DataContext.CanvasScaleY" RelativeSource="{RelativeSource AncestorType=UserControl, AncestorLevel=2 }" />
            </MultiBinding>
        </Grid.Height>

        
        
            <!--BACKGROUND-->
        <Grid Style="{x:Null}" Margin="0.5">


            <!--GLOW-->
            <Rectangle Width="Auto" d:Fill="{DynamicResource fg_high2}"
                        RadiusX="{StaticResource borderRadius}" RadiusY="{StaticResource borderRadius}"
                       RenderOptions.EdgeMode="Aliased"
                       RenderOptions.BitmapScalingMode="NearestNeighbor">

                <i:Interaction.Behaviors>
                    <core:GlowEffectBehavior/>
                </i:Interaction.Behaviors>


                <Rectangle.Style>
                    <Style TargetType="Rectangle">
                        <Setter Property="Opacity" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Visible}" Value="True">
                                <Setter Property="Opacity" Value="0.22"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Rectangle.Style>


                <Rectangle.Fill>
                    <ImageBrush ImageSource="{Binding Thumbnail, Mode=OneTime}" d:ImageSource="/Assets/imagetest.png" Stretch="UniformToFill"/>
                </Rectangle.Fill>

                <Rectangle.Effect>
                    <BlurEffect Radius="100"/>
                </Rectangle.Effect>

            </Rectangle>


            <!--BACKGROUND-->
            <Border x:Name="maskBorder" ClipToBounds="True" CornerRadius="6" Background="{StaticResource fg2}" Opacity="1"/>

            <Border CornerRadius="11" ClipToBounds="True">

                <i:Interaction.Behaviors>
                    <core:GlowEffectBehavior/>
                </i:Interaction.Behaviors>

                <Border.Clip>
                    <RectangleGeometry Rect="0,0,5000,5000"/>
                </Border.Clip>


                <Grid ClipToBounds="True" RenderTransformOrigin="0.5 0.5">

                    <Rectangle Stroke="{x:Null}" StrokeThickness="0" ClipToBounds="True">

                        <Rectangle.Style>
                            <Style TargetType="Rectangle">
                                <Setter Property="Opacity" Value="0.3"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Visible}" Value="True">
                                        <Setter Property="Opacity" Value="1"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>

                        <Rectangle.Fill>
                            <ImageBrush ImageSource="{Binding Thumbnail}" d:ImageSource="/Assets/imagetest.png" Stretch="UniformToFill"/>
                        </Rectangle.Fill>


                        <Rectangle.Effect>
                            <BlurEffect Radius="20" KernelType="Box"/>
                        </Rectangle.Effect>

                    </Rectangle>


                    <Grid.RenderTransform>
                        <ScaleTransform ScaleX="3" ScaleY="3" />
                    </Grid.RenderTransform>


                    <Grid.OpacityMask>
                        <VisualBrush Visual="{Binding ElementName=maskBorder}"/>
                    </Grid.OpacityMask>
                </Grid>

            </Border>


            <!--LOW MODE BACKGROUND SINGLE COLOR-->
            <!--Background="{Binding ColorTag, Converter={StaticResource TrackColorTagConverter}}"-->
            <Border ClipToBounds="True" CornerRadius="6" Opacity="1"
                Background="{Binding Thumbnail, Converter={StaticResource imageToColorConverter}}">
                <i:Interaction.Behaviors>
                    <core:GlowEffectBehavior VisibleOnEnable="False"/>
                </i:Interaction.Behaviors>
            </Border>






            <!--CONTENT-->
            <StackPanel Orientation="Horizontal">
                <themes:ImageBorder ImageSource="{Binding Thumbnail}" d:ImageSource="/Assets/imagetest.png" CornerRadius="7"
                    HorizontalAlignment="Left"
                    Width="{Binding ActualHeight, ElementName=bodyGrid}"
                    Height="{Binding ActualHeight, ElementName=bodyGrid}"/>

                <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top" Margin="4" >
                    <TextBlock Name="dragLimitText" d:Text="Hi test world.mp4" Text="{Binding Name}" FontSize="10">
                        <TextBlock.Effect>
                            <DropShadowEffect Color="Gray" Direction="315" ShadowDepth="1" BlurRadius="1" Opacity="0.5"/>
                        </TextBlock.Effect>
                    </TextBlock>
                </StackPanel>
            </StackPanel>

            <Rectangle RadiusX="{StaticResource borderRadius}" RadiusY="{StaticResource borderRadius}" Style="{StaticResource dragLimitsStyle}" Name="dragLimitStart" HorizontalAlignment="Left" d:Fill="LightCyan" Cursor="ScrollWE" >
                <Rectangle.Fill>
                    <!-- Degradado de transparencia por defecto -->
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Color="#00B8B4F7" Offset="1"/>
                        <!-- Completamente transparente a la izquierda -->
                        <GradientStop Color="#FFB8B4F7" Offset="0"/>
                        <!-- Opaco a la derecha -->
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
            <Rectangle RadiusX="{StaticResource borderRadius}" RadiusY="{StaticResource borderRadius}" Style="{StaticResource dragLimitsStyle}" Name="dragLimitEnd" HorizontalAlignment="Right" d:Fill="LightCyan" Cursor="ScrollWE">
                <Rectangle.Fill>
                    <!-- Degradado de transparencia por defecto -->
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Color="#00B8B4F7" Offset="0"/>
                        <!-- Completamente transparente a la izquierda -->
                        <GradientStop Color="#FFB8B4F7" Offset="1"/>
                        <!-- Opaco a la derecha -->
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>

        </Grid>

        <!--<Border CornerRadius="6" Style="{x:Null}" Margin="-1" BorderBrush="{Binding Image, Converter={StaticResource imageToColorConverter}}" Opacity="0.8" BorderThickness="2" IsHitTestVisible="False">
        </Border>-->

        <!--SELECTED-->
        <Border CornerRadius="6" Style="{x:Null}" Margin="-1" BorderBrush="{StaticResource fg}" Opacity="0.8" BorderThickness="2" IsHitTestVisible="False" Visibility="{Binding IsSelected, Converter={StaticResource boolToVisibilityConverter}}">
            <!--<Border.CornerRadius>
                <CornerRadius TopLeft="{StaticResource borderRadius}" TopRight="{StaticResource borderRadius}"
                              BottomLeft="{StaticResource borderRadius}" BottomRight="{StaticResource borderRadius}"/>
            </Border.CornerRadius>-->
        </Border>

    </Grid>
    
</UserControl>
