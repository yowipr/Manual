<UserControl x:Class="Manual.Core.Nodes.NodeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Manual.Core.Nodes"
             xmlns:obj="clr-namespace:Manual.Objects"
             xmlns:themes="clr-namespace:ManualToolkit.Themes;assembly=ManualToolkit"
             mc:Ignorable="d" 
             
             xmlns:swpf="clr-namespace:Squircle.WPF;assembly=Squircle.WPF"
             
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:core="clr-namespace:Manual.Core"
             
             d:DataContext="{d:DesignInstance Type=local:LatentNode}"
             MinHeight="38" MinWidth="152"
             MouseDown="UserControl_MouseDown"
             MouseUp="UserControl_MouseUp" ClipToBounds="False"
             Visibility="{Binding IsVisible, Converter={StaticResource boolToVisibilityConverter}}"
             RenderOptions.CachingHint="Cache">

    <Grid x:Name="mainGrid" RenderTransformOrigin="0.5, 0.5" UseLayoutRounding="True" SnapsToDevicePixels="True">

        <Grid.RenderTransform>
            <ScaleTransform ScaleX="1" ScaleY="1"/>
        </Grid.RenderTransform>

        <Border CornerRadius="26" Background="{StaticResource bg2}" Margin="1">
            <Border.Effect>
                <DropShadowEffect ShadowDepth="5" Direction="300" Color="Black" Opacity="0.17" RenderOptions.BitmapScalingMode="LowQuality"/>
            </Border.Effect>
        </Border>


        <!--<themes:Squircle Background="{Binding Color, Converter={StaticResource colorToSolidColorBrushConverter}}"/>-->

        <!--bg2 CornerRadius="26"-->
        <themes:Squircle Background="{Binding Color, Converter={StaticResource colorToSolidColorBrushConverter}}">

            <Grid Margin="0 0 0 0">
                <!--header-->
                <!--DISABLED RELEASE: themes - 26 26 0 0-->
                <Border CornerRadius="11 11 0 0" Background="#FF28242F" VerticalAlignment="Top" Height="30" IsHitTestVisible="False" Opacity="0.4"/>

                <!--selection-->
                <Border CornerRadius="11" BorderBrush="{DynamicResource fg}" Opacity="0.7"
                BorderThickness="3" IsHitTestVisible="False"
                Visibility="{Binding IsSelected, Converter={StaticResource boolToVisibilityConverter}}"/>

                <!--is working-->
                <Border CornerRadius="11" BorderBrush="{DynamicResource fg_sub}"
   BorderThickness="3" IsHitTestVisible="False" d:Visibility="Collapsed"
   Visibility="{Binding IsWorking, Converter={StaticResource boolToVisibilityConverter}}">
                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="0"
               Color="#FF5B7FFF"
               Opacity="1"
               BlurRadius="50"/>
                    </Border.Effect>
                </Border>

                <!--is exception-->
                <Border CornerRadius="11" BorderBrush="{DynamicResource log_error}"
BorderThickness="3" IsHitTestVisible="False" d:Visibility="Collapsed"
Visibility="{Binding IsException, Converter={StaticResource boolToVisibilityConverter}}">
                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="0"
                            Color="#CF2150"
                            Opacity="1"
                            BlurRadius="50"/>
                    </Border.Effect>
                </Border>

                <themes:ImageBorder ImageSource="{Binding PreviewImage, Converter={StaticResource SKBitmapToImageSourceConverter}}" d:Visibility="Visible" Visibility="{Binding IsCollapsed, Converter={StaticResource boolToVisibilityConverter}}"
                      Height="30" Width="30" HorizontalAlignment="Right" Margin="0 0 10 0"/>

                <!--header-->
                <Grid Margin="0 7 0 10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Grid Opacity="0.56" Margin="5 -2 0 0">
                        <Ellipse Width="14" Height="14" Opacity="0.26" HorizontalAlignment="Left" Margin="10 0 0 0" Fill="White" MouseDown="Ellipse_MouseDown"/>
                        <obj:NamerText Margin="30 -2 25 0" FontSize="16" d:NameText="Principled Latent" NameText="{Binding Name}" TextBlock.FontSize="16"/>
                    </Grid>


                    <!--content-->
                    <Grid x:Name="contentGrid" Grid.Row="1">
                        <StackPanel >
                            <ItemsControl x:Name="itemsControl" ItemsSource="{Binding Fields}">

                                <ItemsControl.Resources>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                        <Setter Property="Background" Value="{StaticResource fg2}"/>
                                    </Style>
                                </ItemsControl.Resources>


                                <!-- use a stack panel as the main container -->
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>


                            </ItemsControl>

                            <!--IS EDITABLE-->
                            <StackPanel  HorizontalAlignment="Left"
                            d:Visibility="Collapsed" Margin="5 5" Visibility="{Binding IsEditable, Converter={StaticResource boolToVisibilityConverter}}">
                                <Button Content="➕" Click="Button_AddField_Click" Width="26" Margin="-15 0 0 0" Tag="AddField"/>
                            </StackPanel>


                            <!--PREVIEW-->
                            <Grid x:Name="previewImageGrid" d:Visibility="Visible" Visibility="Collapsed" ClipToBounds="True" IsHitTestVisible="False">
                                <themes:ImageBorder  x:Name="previewImage" d:ImageSource="/Assets/imagetest.png" d:Height="270" d:Width="270" Width="0" Height="0" Stretch="Uniform" Margin="5" CornerRadius="22"
                                            
                                            ImageSource="{Binding PreviewImage, Converter={StaticResource SKBitmapToImageSourceConverter}}" Tag="IgnoreHit" IsHitTestVisible="False">
                                    <themes:ImageBorder.ContextMenu>
                                        <ContextMenu>
                                            <ContextMenu.Resources>
                                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                                    <EventSetter Event="Click" Handler="MenuItem_Click"/>
                                                </Style>
                                            </ContextMenu.Resources>

                                            <MenuItem Header="Apply to Selected Layer"/>
                                            <MenuItem Header="Copy" />

                                        </ContextMenu>
                                    </themes:ImageBorder.ContextMenu>
                                </themes:ImageBorder>
                            </Grid>

                        </StackPanel>
                    </Grid>

                </Grid>

                <ProgressBar x:Name="progressBar" d:Visibility="Visible" Maximum="1"
                             IsHitTestVisible="False" Visibility="{Binding IsWorking, Converter={StaticResource boolToVisibilityConverter}}" Tag="IgnoreHit"
                             themes:CustomFields.CornerRadius="16">

                    <i:Interaction.Behaviors>
                        <core:ProgressBarAnimationBehavior Progress="{Binding Progress}"/>
                    </i:Interaction.Behaviors>

                </ProgressBar>

                <!--is error-->
                <Border CornerRadius="22" BorderBrush="{DynamicResource log_error}" Opacity="0.3" Background="{DynamicResource log_error}"
BorderThickness="3" IsHitTestVisible="False" Tag="IgnoreHit" d:Visibility="Collapsed"
Visibility="{Binding IsError, Converter={StaticResource boolToVisibilityConverter}}">
                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="0"
                              Color="Red"
                              Opacity="1"
                              BlurRadius="50"/>
                    </Border.Effect>
                </Border>

            </Grid>
        </themes:Squircle>


        <Thumb x:Name="thumb" Style="{StaticResource ResizeThumb}" DragDelta="onDragDelta" Visibility="{Binding IsCollapsed, Converter={StaticResource boolToVisibilityConverterInverse}}"/>

    </Grid>
    
</UserControl>
