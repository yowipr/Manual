<UserControl x:Class="Manual.Core.Nodes.NodeOptionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Manual.Core.Nodes"
             xmlns:themes="clr-namespace:ManualToolkit.Themes;assembly=ManualToolkit"
             xmlns:mui="clr-namespace:Manual.MUI"
             d:DataContext="{d:DesignInstance Type=local:NodeOption}"
             mc:Ignorable="d" 
             d:Height="20" d:DesignWidth="200" Margin="0 2"
             IsEnabled="{Binding IsReachable}"
             IsHitTestVisible="True"
             ToolTip="{Binding ToolTip}">
    
    <UserControl.Style>
        <Style TargetType="UserControl">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.33"/>
                    <Setter Property="IsHitTestVisible" Value="False"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>
    
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="NodeStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <SolidColorBrush x:Key="hitboxColor" Color="Transparent"/>
            <!--<Thickness x:Key="fieldMargin">10,0</Thickness>-->

        </ResourceDictionary>
    </UserControl.Resources>

    <UserControl.ContextMenu>
        <ContextMenu>
            <MenuItem Header="Convert to Input" Click="RightClickMenu"/>
            <MenuItem Header="Convert to Field" Click="RightClickMenu"/>

            <Separator/>
            <MenuItem Header="Edit Driver" Click="RightClickMenu"/>
            <MenuItem Header="Delete Driver" Click="RightClickMenu"/>
        </ContextMenu>
    </UserControl.ContextMenu>

    <Grid IsHitTestVisible="True">
        <Grid.Style>
            <Style TargetType="Grid">
                <Setter Property="Opacity" Value="1"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Enabled}" Value="False">
                        <Setter Property="Opacity" Value="0.3"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>
        
        <!--Direction Output-->
        <Grid Margin="10 0"
              Visibility="{Binding Direction,
            Converter={StaticResource enumToVisibilityConverter},
            ConverterParameter={x:Static local:NodeOptionDirection.Output}}">

            <Grid x:Name="DragPointO" Tag="point" Width="26" Height="26" HorizontalAlignment="Right" Margin="0 0 -23 0" Background="{StaticResource hitboxColor}"
        PreviewMouseLeftButtonDown="DragPointOutput_MouseLeftButtonDown" MouseEnter="DragPoint_MouseEnter" MouseLeave="DragPoint_MouseLeave">
                <Grid.ToolTip>
                    <ToolTip Content="output"/>
                </Grid.ToolTip>
                
                <Ellipse Width="10" Height="10" Fill="{Binding TypeColor, RelativeSource={RelativeSource AncestorType=UserControl}}" />
            </Grid>
            <TextBlock d:Text="Base Color" Text="{Binding Name}"
                         HorizontalAlignment="Right" VerticalAlignment="Center"/>

        </Grid>

        <!--Direction Input-->
        <Grid Margin="10 0" Visibility="{Binding Direction,
Converter={StaticResource enumToVisibilityConverterInverse},
ConverterParameter={x:Static local:NodeOptionDirection.Output}}">


            <Grid x:Name="DragPointI" Tag="point" Width="26" Height="26" HorizontalAlignment="Left" Margin="-23 0 0 0" Background="{StaticResource hitboxColor}"
          PreviewMouseLeftButtonDown="DragPointInput_MouseLeftButtonDown" MouseEnter="DragPoint_MouseEnter" MouseLeave="DragPoint_MouseLeave"
                   Visibility="{Binding Direction,
                      Converter={StaticResource enumToVisibilityConverterInverse},
                      ConverterParameter={x:Static local:NodeOptionDirection.Field}}">
                <Grid.ToolTip>
                    <ToolTip Content="input"/>
                </Grid.ToolTip>

                <Ellipse  Width="10" Height="10" Fill="{Binding TypeColor, RelativeSource={RelativeSource AncestorType=UserControl}}" />
            </Grid>


            <TextBlock d:Text="Base Color" Text="{Binding Name}" 
                       Visibility="{Binding Direction,
                        Converter={StaticResource enumToVisibilityConverter},
                        ConverterParameter={x:Static local:NodeOptionDirection.Input}}"
        HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10 0 0 0"/>

            <!--Connected-->
            <Grid Visibility="{Binding ConnectionInput, Converter={StaticResource objToVisibilityConverter}}">
                <TextBlock d:Text="Base Color" Text="{Binding Name}"
           HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10 0 0 0"/>
            </Grid>


            <!--field-->
            <Grid  Visibility="{Binding Direction,
                    Converter={StaticResource enumToVisibilityConverterInverse},
                    ConverterParameter={x:Static local:NodeOptionDirection.Input}}">
                <!--DefaultValue not null-->
                <Grid Margin="5 0" Visibility="{Binding ConnectionInput, Converter={StaticResource objToVisibilityHiddenConverterInverse}}">
                    <ContentPresenter x:Name="fieldPresenter"/>
                </Grid>
            </Grid>

        </Grid>

        <!--DRIVER-->
        <Border CornerRadius="13" BorderThickness="2" BorderBrush="{StaticResource fg_sub}" Opacity="1" IsHitTestVisible="False" Margin="12 -3"
                Visibility="{Binding Driver, Converter={StaticResource nullOrEmptyToVisibilityConverter}}"/>
       
     
        <Border CornerRadius="13" BorderThickness="2" BorderBrush="{StaticResource log_error}" Background="{StaticResource log_error}" Margin="12 -3"
                Opacity="0.56" d:Visibility="Collapsed" IsHitTestVisible="False"
                Visibility="{Binding IsError, Converter={StaticResource boolToVisibilityConverter}}"/>

        <Grid Visibility="{Binding Driver, Converter={StaticResource nullOrEmptyToVisibilityConverter}}">
        <Border CornerRadius="13" BorderThickness="2" BorderBrush="{StaticResource log_error}" Background="{StaticResource log_error}" Margin="12 -3"
               Opacity="0.56" d:Visibility="Collapsed" IsHitTestVisible="False"
               Visibility="{Binding Driver.IsError, Converter={StaticResource boolToVisibilityConverter}}"/>
        </Grid>
        
    </Grid>
</UserControl>
