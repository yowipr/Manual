<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ManualToolkit.Themes"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">


    <!--  CONVERTERS  -->
    <local:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <local:BoolToVisibilityConverterInverse x:Key="boolToVisibilityConverterInverse" />
    <local:NullOrEmptyToVisibilityConverter x:Key="nullOrEmptyToVisibilityConverter" />
    <local:NullOrEmptyToVisibilityConverterInverse x:Key="nullOrEmptyToVisibilityConverterInverse" />

    <local:AdminToVisibilityConverter x:Key="adminToVisibilityConverter" />
    <local:ObjToVisibilityConverter x:Key="objToVisibilityConverter" />
    <local:ObjToVisibilityConverterInverse x:Key="objToVisibilityConverterInverse" />
    <local:ObjToDoubleConverter x:Key="objToDoubleConverter" />
    <local:ObjToVisibilityHiddenConverter x:Key="objToVisibilityHiddenConverter" />
    <local:ObjToVisibilityHiddenConverterInverse x:Key="objToVisibilityHiddenConverterInverse" />

    <local:CustomNumberFormatConverter x:Key="customNumberFormatConverter" />
    <local:AdvancedNumberFormatConverter x:Key="advancedNumberFormatConverter" />

    <local:InvertBooleanConverter x:Key="invertBooleanConverter" />

    <local:ColorToSolidColorBrushConverter x:Key="colorToSolidColorBrushConverter" />
    <local:SolidColorBrushToColorConverter x:Key="solidColorBrushToColorConverter" />

    <local:FileNameConverter x:Key="fileNameConverter" />
    <local:StringToImageSourceConverter x:Key="stringToImageSourceConverter" />
    <local:EnumToVisibilityConverter x:Key="enumToVisibilityConverter" />
    <local:EnumToVisibilityConverterInverse x:Key="enumToVisibilityConverterInverse" />
    <local:PointToMarginConverter x:Key="pointToMarginConverter" />

    <local:ProToVisibilityConverter x:Key="proToVisibilityConverter" />
    <local:GenericObjectConverter x:Key="genericObjectConverter" />
    <local:FilePathToFolderNameConverter x:Key="filePathToFolderNameConverter" />

    <local:CollectionCountToVisibilityConverter x:Key="collectionCountToVisibilityConverter"/>
    <local:CollectionCountToBoolConverter x:Key="collectionCountToBoolConverter"/>

    <local:PointsConverter x:Key="pointsConverter"/>
    <local:RectConverter x:Key="rectConverter"/>
    <local:RectSizeConverter x:Key="rectSizeConverter"/>

    <!--  UI STYLE  -->
    <Style x:Key="GridSplitterColumn" TargetType="GridSplitter">
        <Setter Property="Grid.Column" Value="1" />
        <Setter Property="Panel.ZIndex" Value="5" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Width" Value="5" />
        <Setter Property="Opacity" Value="0" />
    </Style>

    <Style x:Key="GridSplitterRow" TargetType="GridSplitter">
        <Setter Property="Grid.Row" Value="1" />
        <Setter Property="Panel.ZIndex" Value="5" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Height" Value="5" />
        <Setter Property="Opacity" Value="0" />
    </Style>



    <Style x:Key="ArrowRect" TargetType="{x:Type Rectangle}">
        <Setter Property="Opacity" Value="0.26"/>
        <Setter Property="Margin" Value="0 2 -2 0"/>
        <Setter Property="Fill" Value="White"/>
        <Setter Property="Width" Value="8"/>
        <Setter Property="Height" Value="8"/>
        <Setter Property="RadiusX" Value="4"/>
        <Setter Property="RadiusY" Value="4"/>
    </Style>

    <Style x:Key="PathArrow" TargetType="{x:Type Path}">
        <!--<Setter Property="Data" Value="M 106.601 490 412.15 245.004 106.601 0 77.85 35.856 338.702 245.004 77.85 454.159 Z" />-->
        <Setter Property="Fill" Value="{StaticResource fg}" />
        <Setter Property="Stretch" Value="Fill" />
        <Setter Property="Height" Value="10" />
        <Setter Property="Width" Value="6" />
        <Setter Property="StrokeThickness" Value="0.8" />
        <Setter Property="Stroke" Value="{StaticResource fg}" />
        <Setter Property="StrokeLineJoin" Value="Round"/>
        <Setter Property="Data" Value="M 300 100 L 500 400 100 400 Z"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform Angle="180"/>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ArrowPolyline" TargetType="Polyline">
        <Setter Property="Opacity" Value="0.56"/>
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="Fill" Value="White" />
        <Setter Property="Stroke" Value="White" />
        <Setter Property="Points" Value="3,14.5 17,14.5 10,20 3,14.5" />
        <Setter Property="StrokeStartLineCap" Value="Round" />
        <Setter Property="StrokeEndLineCap" Value="Round" />
        <Setter Property="StrokeLineJoin" Value="Round" />
        <Setter Property="StrokeThickness" Value="3" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="0.5" ScaleY="0.5" />
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.1,0.1" />
    </Style>
    

    <!--  EDITORS  -->
    <GridLength x:Key="EditorHeaderHeight">30</GridLength>

    <sys:Boolean x:Key="BoolTrue">true</sys:Boolean>
    <sys:Boolean x:Key="BoolFalse">false</sys:Boolean>
    
    <Style TargetType="{x:Type ScrollViewer}">
        <Style.Resources>
            <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">10</sys:Double>
        </Style.Resources>
    </Style>


    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="14,0,0,0"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="NoHoverEffectMenuItem" TargetType="MenuItem">
        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Rectangle x:Name="BackgroundRectangle" Fill="{TemplateBinding Background}" RadiusX="10" RadiusY="10"/>
                <Rectangle x:Name="HoverRectangle" Fill="White" Opacity="0" RadiusX="10" RadiusY="10"/>
                <ContentPresenter ContentSource="Header" Margin="34,3"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="HoverRectangle" Property="Opacity" Value="0.03"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="HoverRectangle" Property="Opacity" Value="0.01"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070" />
    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121" />
    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF" />
    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF" />
    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121" />
    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF" />
    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD" />
    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121" />
    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6" />
    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />


    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource fg2}" />
        <Setter Property="BorderBrush" Value="{StaticResource bg}" />
        <Setter Property="Foreground" Value="{StaticResource fg}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Padding" Value="0,0,0,-10" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ContentStringFormat" Value="{}{0}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="checkBoxBorder"
                            Margin="1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                            <Grid x:Name="markGrid">
                                <Path
                                    x:Name="optionMark"
                                    Margin="1"
                                    Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                    Fill="{StaticResource fg}"
                                    Opacity="0"
                                    Stretch="None" />
                                <Rectangle
                                    x:Name="indeterminateMark"
                                    Margin="2"
                                    Fill="{StaticResource OptionMark.Static.Glyph}"
                                    Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="5 0"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding" Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource fg2}" />
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.MouseOver.Border}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="White" />
                            <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Disabled.Background}" />
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Disabled.Border}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                            <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Pressed.Background}" />
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Pressed.Border}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                            <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource fg_high2}" />

                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="CheckBoxLight" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{StaticResource fg2}"/>

        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3 3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                      
                        <!-- Border que se ilumina -->
                        <Border x:Name="HighlightBorder" Margin="0"            
                            Background="{TemplateBinding Background}" 
                            Opacity="1" 
                            CornerRadius="8">
                            
                            <ContentPresenter
                                     x:Name="contentPresenter"
                                     Grid.Column="1"
                                     Margin="{TemplateBinding Padding}"
                                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                     Focusable="False"
                                     RecognizesAccessKey="True"
                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        
                        <Border Visibility="Collapsed" BorderBrush="{TemplateBinding Background}" Margin="0"
            BorderThickness="2" CornerRadius="6" Opacity="1"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Cambiar color y opacidad cuando IsChecked=True -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="HighlightBorder" Property="Background" Value="{StaticResource fg_high}"/>
                            <Setter TargetName="HighlightBorder" Property="Opacity" Value="1"/>
                        </Trigger>
                       
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <Style x:Key="PropertyPopup" TargetType="Popup">
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="PopupAnimation" Value="Slide" />
    </Style>

    <Style TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border
                        x:Name="border"
                        Padding="3"
                        Background="{TemplateBinding Background}"
                        BorderBrush="Transparent"
                        BorderThickness="1.2">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource fg_high}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource fg_high}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Width" Value="1" />
        <Setter Property="Template">

            <!--  Template for vertical scrollbars  -->
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Width="7" Background="Transparent">
                        <!--  ...  -->
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Track
                            x:Name="PART_Track"
                            Grid.Row="1"
                            Width="7"
                            HorizontalAlignment="right"
                            IsDirectionReversed="true">

                            <Track.Thumb>
                                <Thumb x:Name="PART_Thumb" Background="#FFC25757" Margin="0 0 -3 0" Width="8">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                            <Border
                                                Background="{DynamicResource fg2}"
                                                BorderThickness="0"
                                                CornerRadius="6">
                                                <ContentPresenter />
                                            </Border>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>

                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="PART_Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <!--<DataTrigger Binding="{Binding ComputedVerticalScrollBarVisibility, RelativeSource={RelativeSource Self}}" Value="Collapsed">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource Self}}" Value="Collapsed">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Trigger for horizontal orientation  -->
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Height" Value="10" />
                <Setter Property="Template">
                    <!--  Template for horizontal scrollbars  -->
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <!--  ...  -->
                            <Grid Background="#FF2D2D2D">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Track x:Name="PART_Track" Grid.Column="1">

                                    <Track.Thumb>
                                        <Thumb x:Name="PART_Thumb" Background="#FFC25757">
                                            <Thumb.Template>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Border
                                                        Background="{StaticResource bg2}"
                                                        BorderThickness="0"
                                                        CornerRadius="10">
                                                        <ContentPresenter />
                                                    </Border>
                                                </ControlTemplate>
                                            </Thumb.Template>
                                        </Thumb>
                                    </Track.Thumb>

                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="PART_Thumb" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>




    <Style TargetType="{x:Type Window}">
        <Setter Property="Background" Value="Black" />
    </Style>


    <Style TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="10" />
    </Style>



    <Style TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{DynamicResource span}" />
        <Setter Property="Foreground" Value="{DynamicResource fg}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource span}" />
        <Setter Property="Foreground" Value="{DynamicResource fg}" />
    </Style>

    <Style TargetType="RadioButton">
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{StaticResource fg}" />
        <Setter Property="Background" Value="{StaticResource bg2}" />
        <Setter Property="Margin" Value="5,0,1,1" />
        <Setter Property="IsExpanded" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border
                        Margin="1"
                        Background="{TemplateBinding Background}"
                        CornerRadius="5">

                        <DockPanel>

                            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                                <ToggleButton
                                    Margin="0,0,0,0"
                                    VerticalAlignment="Top"
                                    Content="{TemplateBinding Header}"
                                    DockPanel.Dock="Top"
                                    Focusable="False"
                                    Foreground="Transparent"
                                    IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border
                                                Margin="8,12,0,0"
                                                Padding="0"
                                                Background="Transparent"
                                                CornerRadius="5">

                                                <!--<Path Visibility="Collapsed"
                                                    x:Name="Arrow"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center"
                                                    Data="M 0 0 L 4 4 L 0 8"
                                                    Stroke="{StaticResource fg}"
                                                    StrokeThickness="2" />-->

                                                <Polyline Style="{StaticResource ArrowPolyline}"/>

                                            </Border>
                                            <!--<ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter TargetName="Arrow" Property="Data" Value="M 0 0 L 4 4 L 8 0" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>-->
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <TextBlock
                                    Margin="8,5,0,0"
                                    DockPanel.Dock="Top"
                                    FontWeight="Medium"
                                    Foreground="{StaticResource fg}"
                                    Text="{TemplateBinding Header}" />


                            </StackPanel>
                            <Border
                                x:Name="ExpanderContent"
                                Margin="0,5,0,5"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Background="{TemplateBinding Background}"
                                DockPanel.Dock="Top">
                                
                                <Border.LayoutTransform>
                                    <ScaleTransform ScaleY="0"/>
                                </Border.LayoutTransform>

                                <StackPanel HorizontalAlignment="Left" Orientation="Vertical">
                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                </StackPanel>

                            </Border>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                             Storyboard.TargetProperty=
                               "(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                             To="1"
                             Duration="0:0:0.17">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                                Storyboard.TargetProperty=
                                                  "Opacity"
                                                To="1"
                                                Duration="0:0:0.17">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                                Storyboard.TargetProperty=
                                                  "(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                                To="0"
                                                Duration="0:0:0.17">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                                   Storyboard.TargetProperty=
                                                     "Opacity"
                                                   To="0"
                                                   Duration="0:0:0.17">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>


                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <BackEase x:Key="EaseOut" EasingMode="EaseOut"/>
    
    <Style TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource fg2}" />
        <Setter Property="Foreground" Value="{DynamicResource fg}" />
        <Setter Property="FontFamily" Value="{StaticResource span}" />
        <Setter Property="Margin" Value="5,1,5,1" />
        <Setter Property="MaxWidth" Value="100000" />
        <Setter Property="Width" Value="auto" />
        <Setter Property="Height" Value="24" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Padding" Value="12" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{Binding Path=(local:CustomFields.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                        BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        
                        <Border.RenderTransform>
                            <ScaleTransform x:Name="buttonScaleTransform"/>
                        </Border.RenderTransform>
                        <Border.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5"/>
                        </Border.RenderTransformOrigin>
                        
                        <ContentPresenter
                            x:Name="contentPresenter"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            TextBlock.FontSize="{TemplateBinding FontSize}">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
                                    <Setter Property="FontFamily" Value="{Binding FontFamily, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttonScaleTransform"
                                         Storyboard.TargetProperty="ScaleX"
                                         To="0.96" Duration="0:0:0.2"
                                         EasingFunction="{StaticResource EaseOut}"/>
                                        <DoubleAnimation Storyboard.TargetName="buttonScaleTransform"
                                         Storyboard.TargetProperty="ScaleY"
                                         To="0.96" Duration="0:0:0.2"
                                         EasingFunction="{StaticResource EaseOut}"/>
                                        
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttonScaleTransform"
                             Storyboard.TargetProperty="ScaleX"
                             BeginTime="0:0:0.2"
                                          From="0.96"  To="1" Duration="0:0:0.2"
                             EasingFunction="{StaticResource EaseOut}"/>
                                            <DoubleAnimation Storyboard.TargetName="buttonScaleTransform"
                             Storyboard.TargetProperty="ScaleY"
                             BeginTime="0:0:0.2" 
                                              From="0.96"  To="1" Duration="0:0:0.2"
                             EasingFunction="{StaticResource EaseOut}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource fg_sub}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource fg_sub}" />
                        </Trigger>
                        
                        
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ButtonInverseTheme"
        BasedOn="{StaticResource {x:Type Button}}"
        TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource bg}" />
        <Setter Property="Background" Value="{StaticResource fg_full}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource bg}" />
                <Setter Property="Background" Value="{StaticResource fg_full}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="ButtonBig"
        BasedOn="{StaticResource {x:Type Button}}"
        TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource bg}" />
        <Setter Property="Background" Value="{StaticResource fg_full}" />
        <Setter Property="Width" Value="150" />
        <Setter Property="Height" Value="40" />
        <Setter Property="local:CustomFields.CornerRadius" Value="20" />

    </Style>

    <!--<Style
        x:Key="ButtonInverseTheme"
        BasedOn="{StaticResource {x:Type Button}}"
        TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource bg}" />
        <Setter Property="Background" Value="{StaticResource fg_full}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="{StaticResource bg}" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Placement" Value="Bottom" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border
                        Padding="8,5"
                        Background="{StaticResource bg_full}"
                        CornerRadius="5"
                        Opacity="0.85">
                        <TextBlock
                            FontWeight="Bold"
                            Foreground="{StaticResource fg}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="{x:Type StackPanel}">
        <!--<Setter Property="Width" Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Expander}}" />-->
        <Setter Property="Height" Value="Auto" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="0,0,0,0" />
    </Style>

    <Style TargetType="{x:Type RichTextBox}">

        <Setter Property="Background" Value="{DynamicResource bg3}" />
        <Setter Property="Foreground" Value="{StaticResource fg}" />
        <Setter Property="FontFamily" Value="{StaticResource span}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RichTextBox}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{StaticResource fg2}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                        <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{StaticResource fg}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
                            x:Name="ToggleButton"
                            Grid.Column="2"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="5*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Border
                                            x:Name="Border"
                                            Grid.ColumnSpan="2"
                                            Background="{DynamicResource bg4}"
                                            BorderBrush="{StaticResource fg2}"
                                            BorderThickness="0"
                                            CornerRadius="8"
                                            Opacity="0.56" />
                                        <Border
                                            Grid.Column="0"
                                            Margin="1"
                                            Background="{StaticResource bg4}"
                                            BorderBrush="Transparent"
                                            BorderThickness="0,0,1,0"
                                            CornerRadius="5,0,0,5"
                                            Opacity="0" />
                                        
                                        
                                        <!--<Path
                                            x:Name="Arrow"
                                            Grid.Column="1"
                                            Width="20"
                                            Height="10"
                                            Margin="0,0,-7,-2.5"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Style="{StaticResource PathArrow}">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="0" />
                                            </Path.RenderTransform>
                                        </Path>-->

                                        <Polyline Style="{StaticResource ArrowPolyline}" Grid.Column="1" HorizontalAlignment="Right" Margin="0 3 8 0"/>


                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource fg2}" />
                                        </Trigger>
                                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource bg4}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter
                            Name="ContentSite"
                            Margin="10,3,3,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />
                        <TextBox
                            x:Name="PART_EditableTextBox"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Visibility="Hidden" />
                        <Popup
                            Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Grid
                                Name="DropDown"
                                MinWidth="{Binding ElementName=ToggleButton, Path=ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder" Background="{StaticResource bg4}" />
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers />
    </Style>

    <Style TargetType="ComboBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border
                        x:Name="Border"
                        Padding="2"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="1">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource fg_high}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource fg_high}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.56" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{StaticResource fg}" />
        <Setter Property="Background" Value="{StaticResource bg3}" />
        <Setter Property="FontFamily" Value="{StaticResource span}" />
        <Setter Property="Margin" Value="5,2,5,2" />
        <Setter Property="Width" Value="96" />
        <Setter Property="Height" Value="22" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="CaretBrush" Value="{StaticResource fg_high2}"/>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="Cut" Command="ApplicationCommands.Cut"/>
                    <MenuItem Header="Copy" Command="ApplicationCommands.Copy"/>
                    <MenuItem Header="Paste" Command="ApplicationCommands.Paste"/>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{x:Null}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="11">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            VerticalAlignment="Center"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource fg2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PromptBox" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{StaticResource fg}" />
        <Setter Property="Background" Value="{StaticResource bg3}" />
        <Setter Property="FontFamily" Value="{StaticResource span}" />
        <Setter Property="Margin" Value="5,2,5,2" />
        <Setter Property="Width" Value="96" />
        <Setter Property="Height" Value="22" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="CaretBrush" Value="{StaticResource fg_high2}"/>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="Cut" Command="ApplicationCommands.Cut"/>
                    <MenuItem Header="Copy" Command="ApplicationCommands.Copy"/>
                    <MenuItem Header="Paste" Command="ApplicationCommands.Paste"/>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{x:Null}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="11">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            VerticalAlignment="Center"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource fg2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border
                        Background="{StaticResource fg2}"
                        BorderBrush="{x:Null}"
                        BorderThickness="0"
                        Padding="2"
                        CornerRadius="11">
                        <StackPanel IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type MenuItem}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource fg}" />
                <Setter Property="Padding" Value="0" />
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type Separator}">
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="3" />
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{StaticResource fg2}" />
        <Setter Property="Margin" Value="0,2,0,2" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border
                        Height="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border CornerRadius="0">
                        <Rectangle
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Fill="{TemplateBinding Background}"
                            RadiusX="10"
                            RadiusY="10" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TabItem">
        <Setter Property="Padding" Value="2" />
        <Setter Property="Background" Value="{StaticResource bg}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource fg}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid>
                        <Border
                            Name="Border"
                            Margin="0,0,-4,0"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter
                                x:Name="ContentSite"
                                Margin="12,2,12,2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                ContentSource="Header" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource bg2}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource bg2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SubButton" TargetType="Button">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{StaticResource fg}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="10" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border
                            x:Name="hoverBackground"
                            Padding="5"
                            Background="Transparent"
                            CornerRadius="10"
                            Opacity="0" />
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="hoverBackground" Property="Background" Value="{StaticResource fg_high}" />
                            <Setter TargetName="hoverBackground" Property="Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="CloseButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Content" Value="✕" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Panel.ZIndex" Value="3" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect
                    BlurRadius="1"
                    Direction="-45"
                    Opacity="1"
                    ShadowDepth="4"
                    Color="Black" />
            </Setter.Value>
        </Setter>

        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{StaticResource fg}" />

    </Style>

    <Style x:Key="SubIconButton" TargetType="local:IconButton">
        <Setter Property="FontSize" Value="100" />
        <Setter Property="Margin" Value="100,0" />
    </Style>



    <!--  MENU  -->
    <SolidColorBrush x:Key="Menu.Static.Background" Color="blue" />
    <SolidColorBrush x:Key="Menu.Static.Border" Color="Transparent" />
    <SolidColorBrush x:Key="Menu.Static.Foreground" Color="#bfc1c8" />
    <SolidColorBrush x:Key="Menu.Static.Separator" Color="#222222" />
    <SolidColorBrush x:Key="Menu.Disabled.Foreground" Color="#FF707070" />
    <SolidColorBrush x:Key="MenuItem.Selected.Background" Color="red" />
    <SolidColorBrush x:Key="MenuItem.Selected.Border" Color="#343CAD" />
    <SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="#FF262626" />
    <SolidColorBrush x:Key="MenuItem.Highlight.Border" Color="#343CAD" />
    <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background" Color="#222222" />
    <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border" Color="#262626" />
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
    <Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>
    <Style
        x:Key="MenuScrollButton"
        BasedOn="{x:Null}"
        TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
                        x:Name="templateRoot"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            Margin="6"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer,
                                     TypeInTargetAssembly={x:Type FrameworkElement}}"
        BasedOn="{x:Null}"
        TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}" CanContentScroll="{TemplateBinding CanContentScroll}" />
                        </Border>
                        <RepeatButton
                            Grid.Row="0"
                            Grid.Column="0"
                            Command="{x:Static ScrollBar.LineUpCommand}"
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Focusable="false"
                            Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding
                                    Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                    ConverterParameter="0"
                                    FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource UpArrow}" Fill="{StaticResource fg}" />
                        </RepeatButton>
                        <RepeatButton
                            Grid.Row="2"
                            Grid.Column="0"
                            Command="{x:Static ScrollBar.LineDownCommand}"
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Focusable="false"
                            Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding
                                    Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                    ConverterParameter="100"
                                    FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource DownArrow}" Fill="{StaticResource fg}" />
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Border
            x:Name="templateRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="Icon"
                    Width="16"
                    Height="16"
                    Margin="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    ContentSource="Icon"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Path
                    x:Name="GlyphPanel"
                    Margin="3"
                    VerticalAlignment="Center"
                    Data="{StaticResource Checkmark}"
                    Fill="{StaticResource fg}"
                    FlowDirection="LeftToRight"
                    Visibility="Collapsed" />
                <ContentPresenter
                    Grid.Column="1"
                    Margin="{TemplateBinding Padding}"
                    ContentSource="Header"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItem.Highlight.Border}" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource fg}" />
                <Setter TargetName="GlyphPanel" Property="Fill" Value="{StaticResource Menu.Disabled.Foreground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItem.Highlight.Disabled.Background}" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.Disabled.Border}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Border
            x:Name="templateRoot"
            Background="Transparent"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="Icon"
                    Width="16"
                    Height="16"
                    Margin="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    ContentSource="Icon"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Path
                    x:Name="GlyphPanel"
                    Margin="3"
                    VerticalAlignment="Center"
                    Data="{StaticResource Checkmark}"
                    Fill="{TemplateBinding Foreground}"
                    FlowDirection="LeftToRight"
                    Visibility="Collapsed" />
                <ContentPresenter
                    Grid.Column="1"
                    Margin="{TemplateBinding Padding}"
                    ContentSource="Header"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Popup
                    x:Name="PART_Popup"
                    AllowsTransparency="true"
                    Focusable="false"
                    IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Bottom"
                    PlacementTarget="{Binding ElementName=templateRoot}"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                    <Border
                        x:Name="SubMenuBorder"
                        Padding="2"
                        Background="{DynamicResource fg2}"
                        BorderBrush="{StaticResource Menu.Static.Border}"
                        BorderThickness="1"
                        >
                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <Rectangle
                                        x:Name="OpaqueRect"
                                        Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
                                        Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                        Fill="Transparent" />
                                </Canvas>
                                <Rectangle
                                    Width="1"
                                    Margin="2,2,0,2"
                                    HorizontalAlignment="Left"
                                    Fill="{StaticResource Menu.Static.Separator}"
                                    Opacity="0" />
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    Grid.IsSharedSizeScope="true"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    KeyboardNavigation.TabNavigation="Cycle"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItem.Highlight.Border}" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource fg}" />
                <Setter TargetName="GlyphPanel" Property="Fill" Value="{StaticResource Menu.Disabled.Foreground}" />
            </Trigger>
            <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
                <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Border
            x:Name="templateRoot"
            Height="22"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="Auto"
                        MinWidth="22"
                        SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="13" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="Icon"
                    Width="16"
                    Height="16"
                    Margin="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    ContentSource="Icon"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Border
                    x:Name="GlyphPanel"
                    Width="22"
                    Height="22"
                    Margin="-1,0,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="{StaticResource MenuItem.Selected.Background}"
                    BorderBrush="{StaticResource MenuItem.Selected.Border}"
                    BorderThickness="1"
                    ClipToBounds="False"
                    Visibility="Hidden">
                    <Path
                        x:Name="Glyph"
                        Width="10"
                        Height="11"
                        Data="{StaticResource Checkmark}"
                        Fill="{StaticResource Menu.Static.Foreground}"
                        FlowDirection="LeftToRight" />
                </Border>
                <ContentPresenter
                    x:Name="menuHeaderContainer"
                    Grid.Column="2"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    ContentSource="Header"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock
                    x:Name="menuGestureText"
                    Grid.Column="4"
                    Margin="{TemplateBinding Padding}"
                    VerticalAlignment="Center"
                    Opacity="0.7"
                    Text="{TemplateBinding InputGestureText}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItem.Highlight.Border}" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource Menu.Disabled.Foreground}" />
                <Setter TargetName="Glyph" Property="Fill" Value="{StaticResource Menu.Disabled.Foreground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItem.Highlight.Disabled.Background}" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.Disabled.Border}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Border
            x:Name="templateRoot"
            Height="22"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="Auto"
                        MinWidth="22"
                        SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="13" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="Icon"
                    Width="16"
                    Height="16"
                    Margin="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    ContentSource="Icon"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Border
                    x:Name="GlyphPanel"
                    Width="22"
                    Height="22"
                    Margin="-1,0,0,0"
                    VerticalAlignment="Center"
                    Background="{StaticResource MenuItem.Highlight.Background}"
                    BorderBrush="{StaticResource MenuItem.Highlight.Border}"
                    BorderThickness="1"
                    Visibility="Hidden">
                    <Path
                        x:Name="Glyph"
                        Width="9"
                        Height="11"
                        Data="{DynamicResource Checkmark}"
                        Fill="{StaticResource Menu.Static.Foreground}"
                        FlowDirection="LeftToRight" />
                </Border>
                <ContentPresenter
                    Grid.Column="2"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    ContentSource="Header"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock
                    Grid.Column="4"
                    Margin="{TemplateBinding Padding}"
                    VerticalAlignment="Center"
                    Opacity="0.7"
                    Text="{TemplateBinding InputGestureText}" />
                <Path
                    x:Name="RightArrow"
                    Grid.Column="5"
                    Margin="10,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Data="{StaticResource RightArrow}"
                    Fill="{StaticResource Menu.Static.Foreground}" />
                <Popup
                    x:Name="PART_Popup"
                    AllowsTransparency="true"
                    Focusable="false"
                    HorizontalOffset="-2"
                    IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Right"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                    VerticalOffset="-3">
                    <Border
                        x:Name="SubMenuBorder"
                        Padding="2"
                        Background="{DynamicResource fg2}"
                        BorderBrush="{StaticResource Menu.Static.Border}"
                        BorderThickness="1">
                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <Rectangle
                                        x:Name="OpaqueRect"
                                        Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
                                        Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                        Fill="{StaticResource bg}"
                                        Opacity="0" />
                                </Canvas>
                                <!--  EL CORDÓN  -->
                                <Rectangle
                                    Width="1"
                                    Margin="29,2,0,2"
                                    HorizontalAlignment="Left"
                                    Fill="Transparent" />
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    Grid.IsSharedSizeScope="true"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    KeyboardNavigation.TabNavigation="Cycle"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource MenuItem.Highlight.Border}" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource MenuItem.Highlight.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{StaticResource Menu.Disabled.Foreground}" />
                <Setter TargetName="Glyph" Property="Fill" Value="{StaticResource Menu.Disabled.Foreground}" />
                <Setter TargetName="RightArrow" Property="Fill" Value="{StaticResource Menu.Disabled.Foreground}" />
                <Setter Property="Foreground" Value="{StaticResource Menu.Disabled.Foreground}" />
            </Trigger>
            <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
                <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />

        <Setter Property="FontFamily" Value="{StaticResource span}" />

        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                <Setter Property="Padding" Value="6,0" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Background" Value="{StaticResource Menu.Static.Background}" />
                <Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Border}" />
                <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
                <Setter Property="Padding" Value="6,0" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.56" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontFamily" Value="{StaticResource span}" />
    </Style>



    <!--LOADING ANIMATION-->
    <LinearGradientBrush x:Key="LoadingGradient" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#00FFFFFF" Offset="0"/>
        <GradientStop Color="#FFFFFFFF" Offset="0.5" />
        <GradientStop Color="#00FFFFFF" Offset="1"/>
        
    </LinearGradientBrush>
    
    <Storyboard x:Key="AnimateGradientLoad" RepeatBehavior="Forever" AutoReverse="False">
        <DoubleAnimation Storyboard.TargetProperty="Background.GradientStops[1].Offset"
     From="0" To="1" Duration="0:0:3" >
            <DoubleAnimation.EasingFunction>
                <QuarticEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <DoubleAnimation
Storyboard.TargetProperty="Opacity"
From="0" To="0.75" Duration="0:0:1.5"
AutoReverse="True" />
       
    </Storyboard>

    
    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource fg_sub}" />
        <Setter Property="Opacity" Value="0.56" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Border
                        Padding="0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="11">
                        <Grid x:Name="PART_Track">
                            <Grid
                                x:Name="PART_Indicator"
                                HorizontalAlignment="Left"> 

                                <Border x:Name="borderP" Background="{TemplateBinding Foreground}"
                                    CornerRadius="{Binding Path=(local:CustomFields.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"/>
                                
                                
                                
                                <!--GLOW-->

                                <Border x:Name="loadBor"
            HorizontalAlignment="Stretch"        
            CornerRadius="{Binding Path=(local:CustomFields.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                    
                                    <Border.Background>
                                        <StaticResource ResourceKey="LoadingGradient"/>
                                    </Border.Background>
                              
                                    <Border.Triggers>
                                        <EventTrigger RoutedEvent="Loaded">
                                            <BeginStoryboard Storyboard="{StaticResource AnimateGradientLoad}"/>
                                        </EventTrigger>
                                    </Border.Triggers>

                                    </Border>
                                

                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        
     
    </Style>

    <Style x:Key="ExpandSplit" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{StaticResource fg}" />
        <Setter Property="Background" Value="{StaticResource bg2}" />
        <Setter Property="Margin" Value="5,0,1,1" />
        <Setter Property="IsExpanded" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border
                        Margin="1"
                        Background="{TemplateBinding Background}"
                        CornerRadius="5">

                        <Grid>

                            <StackPanel DockPanel.Dock="Top" Orientation="Vertical">

                                <!--  content  -->
                                <Border
                                    x:Name="ExpanderContent"
                                    Margin="0,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Background="{TemplateBinding Background}"
                                    DockPanel.Dock="Top">

                                    <StackPanel HorizontalAlignment="Left" Orientation="Vertical">
                                        <ContentPresenter Content="{TemplateBinding Content}" />
                                    </StackPanel>
                                    
                                    <Border.LayoutTransform>
                                        <ScaleTransform ScaleY="0"/>
                                    </Border.LayoutTransform>
                                    
                                </Border>

                                <!--  arrow path  -->
                                <ToggleButton
                                    Margin="0,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Panel.ZIndex="10"
                                    Content="{TemplateBinding Header}"
                                    DockPanel.Dock="Top"
                                    Focusable="False"
                                    Foreground="Transparent"
                                    IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Cursor="Hand"
                                                Width="20"
                                                Height="20"
                                                Margin="8,0,0,0"
                                                Padding="0"
                                                Background="Transparent"
                                                CornerRadius="5">

                                                <StackPanel VerticalAlignment="Center" Orientation="Vertical">


                                                    <Polyline x:Name="Arrow" Margin="0 0 0 0" Style="{StaticResource ArrowPolyline}" RenderTransformOrigin="0.5 0.5">
                                                        <Polyline.RenderTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform ScaleX="0.5" ScaleY="0.5"/>
                                                                <RotateTransform Angle="0"/>
                                                            </TransformGroup>
                                                        </Polyline.RenderTransform>


                                                        <Polyline.Effect>
                                                            <DropShadowEffect BlurRadius="1" ShadowDepth="2" Direction="275" Color="Black" Opacity="0.6" RenderingBias="Performance"/>
                                                        </Polyline.Effect>


                                                    </Polyline>

                                                </StackPanel>

                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter TargetName="Arrow" Property="Opacity" Value="0.5" />
                                                    <Setter TargetName="Arrow" Property="RenderTransform">
                                                        <Setter.Value>
                                                            <TransformGroup>
                                                                <ScaleTransform ScaleX="0.5" ScaleY="0.5"/>
                                                                <RotateTransform Angle="180"/>
                                                            </TransformGroup>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>

                            </StackPanel>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ContentRow" Property="Height" Value="0" />
                            <Setter Property="Width" Value="40" />
                            <Setter Property="HorizontalAlignment" Value="Left" />
                        </Trigger>-->

                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                             Storyboard.TargetProperty=
                               "(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                             To="1"
                             Duration="0:0:0.17">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                                Storyboard.TargetProperty=
                                                  "Opacity"
                                                To="1"
                                                Duration="0:0:0.21">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    
                                    </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                                Storyboard.TargetProperty=
                                                  "(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                                To="0"
                                                Duration="0:0:0.21">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                                   Storyboard.TargetProperty=
                                                     "Opacity"
                                                   To="0"
                                                   Duration="0:0:0.17">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                    
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                        </Trigger>
                    
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ResizeThumb" TargetType="Thumb">
        <Setter Property="Cursor" Value="SizeNWSE"/>
        <Setter Property="Foreground" Value="{StaticResource bg3}" />
        <Setter Property="Width" Value="10" />
        <Setter Property="Height" Value="10" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Cursor" Value="SizeNWSE" />
        <Setter Property="Margin" Value="0,0,6,6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid Background="Transparent">
                        <Rectangle Opacity="0.9"
                            Width="1"
                            Height="12"
                            Margin="0,0,-9,-3"
                            Fill="{TemplateBinding Foreground}">
                            <Rectangle.RenderTransform>
                                <RotateTransform Angle="45" />
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        <Rectangle Opacity="0.9"
                            Width="1"
                            Height="6"
                            Margin="0,0,-9,-6"
                            Fill="{TemplateBinding Foreground}">
                            <Rectangle.RenderTransform>
                                <RotateTransform Angle="45" />
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>






</ResourceDictionary>